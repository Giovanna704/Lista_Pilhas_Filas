/*
20.União de Listas Ordenadas:
- Escreva uma função unir_listas_ordenadas que una duas listas ordenadas em uma única lista ordenada.
*/

#include <stdio.h>
#include <stdlib.h>

typedef struct No {
    int dado;
    struct No* prox;
} No;

No* criar_no(int valor) {
    No* novo = (No*)malloc(sizeof(No));
    novo->dado = valor;
    novo->prox = NULL;
    return novo;
}

void inserir_ordenado(No** lista, int valor) {
    No* novo = criar_no(valor);
    if (*lista == NULL || (*lista)->dado >= valor) {
        novo->prox = *lista;
        *lista = novo;
        return;
    }
    No* atual = *lista;
    while (atual->prox != NULL && atual->prox->dado < valor) {
        atual = atual->prox;
    }
    novo->prox = atual->prox;
    atual->prox = novo;
}

No* unir_listas_ordenadas(No* l1, No* l2) {
    No* resultado = NULL;
    No** ult = &resultado;

    while (l1 != NULL && l2 != NULL) {
        if (l1->dado <= l2->dado) {
            *ult = criar_no(l1->dado);
            l1 = l1->prox;
        } else {
            *ult = criar_no(l2->dado);
            l2 = l2->prox;
        }
        ult = &((*ult)->prox);
    }

    while (l1 != NULL) {
        *ult = criar_no(l1->dado);
        l1 = l1->prox;
        ult = &((*ult)->prox);
    }

    while (l2 != NULL) {
        *ult = criar_no(l2->dado);
        l2 = l2->prox;
        ult = &((*ult)->prox);
    }

    return resultado;
}

void exibir_lista(No* lista) {
    No* temp = lista;
    printf("Lista: ");
    while (temp != NULL) {
        printf("%d ", temp->dado);
        temp = temp->prox;
    }
    printf("\n");
}

int main() {
    No* lista1 = NULL;
    No* lista2 = NULL;

    inserir_ordenado(&lista1, 1);
    inserir_ordenado(&lista1, 3);
    inserir_ordenado(&lista1, 5);
    inserir_ordenado(&lista1, 7);

    inserir_ordenado(&lista2, 2);
    inserir_ordenado(&lista2, 4);
    inserir_ordenado(&lista2, 6);
    inserir_ordenado(&lista2, 8);

    exibir_lista(lista1);
    exibir_lista(lista2);

    No* unida = unir_listas_ordenadas(lista1, lista2);

    exibir_lista(unida);

    return 0;
}
