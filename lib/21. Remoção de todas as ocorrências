/*
21.Remoção de Todas as Ocorrências:
- Implemente uma função remover_todas_ocorrencias que remova todos os nós com um valor específico.
*/

#include <stdio.h>
#include <stdlib.h>

typedef struct No {
    int dado;
    struct No* prox;
} No;

No* criar_no(int valor) {
    No* novo = (No*)malloc(sizeof(No));
    novo->dado = valor;
    novo->prox = NULL;
    return novo;
}

void inserir_fim(No** lista, int valor) {
    No* novo = criar_no(valor);
    if (*lista == NULL) {
        *lista = novo;
        return;
    }
    No* temp = *lista;
    while (temp->prox != NULL) {
        temp = temp->prox;
    }
    temp->prox = novo;
}

void remover_todas_ocorrencias(No** lista, int valor) {
    while (*lista != NULL && (*lista)->dado == valor) {
        No* temp = *lista;
        *lista = (*lista)->prox;
        free(temp);
    }

    No* atual = *lista;
    while (atual != NULL && atual->prox != NULL) {
        if (atual->prox->dado == valor) {
            No* temp = atual->prox;
            atual->prox = temp->prox;
            free(temp);
        } else {
            atual = atual->prox;
        }
    }
}

void exibir_lista(No* lista) {
    No* temp = lista;
    printf("Lista: ");
    while (temp != NULL) {
        printf("%d ", temp->dado);
        temp = temp->prox;
    }
    printf("\n");
}

int main() {
    No* lista = NULL;

    inserir_fim(&lista, 1);
    inserir_fim(&lista, 2);
    inserir_fim(&lista, 3);
    inserir_fim(&lista, 2);
    inserir_fim(&lista, 4);
    inserir_fim(&lista, 2);
    inserir_fim(&lista, 5);

    exibir_lista(lista);

    remover_todas_ocorrencias(&lista, 2);

    exibir_lista(lista);

    return 0;
}
